// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Cart /> displays a cart item if user has one 1`] = `
Array [
  .c0 {
  position: fixed;
  min-width: 500px;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  display: grid;
  grid-template-rows: auto 1fr auto;
  background: #FAFAFA;
  box-shadow: 0 0 10px 3px rgba(0,0,0,0.2);
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}

.c0 ul {
  background: #F0F0F0;
  margin: 0;
  padding: 0 2rem;
  list-style: none;
  overflow: auto;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c2 {
  position: absolute;
  z-index: 2;
  top: 3rem;
  right: 0rem;
  background: #333333;
  color: #FF80B5;
  border: 0;
  outline: 0;
  cursor: pointer;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c2:hover {
  color: #ff1a7a;
}

.c1 {
  background: #333333;
  border-left: 10px solid #FF80B5;
  padding: 1rem;
}

.c1 .title {
  font-size: 3.5rem;
  color: white;
  text-align: center;
}

.c7 {
  font-family: 'Raleway';
  font-size: 2.5rem;
  padding: 0.5rem;
  border: none;
  outline: none;
  cursor: pointer;
  background: #29FFA6;
  color: #3D3D3D;
  -webkit-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  padding: 2rem 4rem;
}

.c7:hover {
  box-shadow: 0 12px 24px 0 rgba(0,0,0,0.09);
}

.c6 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 10px double #333333;
  background: white;
  padding: 1rem;
}

.c6 .totals {
  opacity: 1;
}

.c6 .totals >:last-child {
  font-size: 3rem;
}

.c5 {
  font-size: 3rem;
  background: none;
  outline: none;
  border: none;
  margin-right: 1rem;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c5:hover {
  color: red;
  cursor: pointer;
}

.c4 {
  display: grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  grid-template-columns: 10rem 1fr auto;
  background: white;
  padding: 1rem 0;
  margin: 1rem auto;
  box-shadow: 0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12);
}

.c4 img {
  justify-self: center;
  width: 7.5rem;
  border: 1px solid #E0E0E0;
}

.c4 h3,
.c4 p {
  margin: 0;
}

@media (max-width:36em) {
  .c0 {
    min-width: 350px;
  }
}

@media (max-width:36em) {
  .c7 {
    font-size: 2rem;
  }
}

<Cart__CartStyles
    data-test="cart"
  >
    <StyledComponent
      data-test="cart"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Cart__CartStyles-sc-16y1lxx-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "position:fixed;min-width:500px;height:100%;top:0;right:0;bottom:0;z-index:5;display:grid;grid-template-rows:auto 1fr auto;background:",
              [Function],
              ";box-shadow:0 0 10px 3px rgba(0,0,0,0.2);transform:",
              [Function],
              ";transition:all 0.5s ease-out;",
              "@media (max-width:",
              "36",
              "em){",
              "
    min-width: 350px;
  ",
              "}",
              " ul{background:",
              [Function],
              ";margin:0;padding:0 2rem;list-style:none;overflow:auto;}",
            ],
          },
          "displayName": "Cart__CartStyles",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Cart__CartStyles-sc-16y1lxx-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-test="cart"
      >
        <CartHeader
          title="Mrs. Earline Bradtke's Cart"
          toggleCart={[Function]}
        >
          <CartHeader__CartHeaderStyles>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "background:",
                      [Function],
                      ";border-left:10px solid ",
                      [Function],
                      ";padding:1rem;.title{font-size:3.5rem;color:white;text-align:center;}",
                    ],
                  },
                  "displayName": "CartHeader__CartHeaderStyles",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                  "target": "header",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <header
                className="c1"
              >
                <CloseButton
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "CloseButton-sc-1atzcdg-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "position:absolute;z-index:2;top:3rem;right:0rem;background:",
                            [Function],
                            ";color:",
                            [Function],
                            ";border:0;outline:0;cursor:pointer;transition:0.3s;&:hover{color:",
                            [Function],
                            ";}",
                          ],
                        },
                        "displayName": "CloseButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "CloseButton-sc-1atzcdg-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <button
                      className="c2"
                      onClick={[Function]}
                    >
                      <ArrowForward
                        size={25}
                      >
                        <StyledIconBase
                          iconAttrs={
                            Object {
                              "fill": "currentColor",
                            }
                          }
                          iconVerticalAlign="middle"
                          iconViewBox="0 0 24 24"
                          size={25}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "StyledIconBase-sc-bdy9j4",
                                  "isStatic": false,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  display: inline-block;
  vertical-align: ",
                                    [Function],
                                    ";
  overflow: hidden;
",
                                  ],
                                },
                                "displayName": "StyledIconBase",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "StyledIconBase-sc-bdy9j4",
                                "target": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconAttrs={
                              Object {
                                "fill": "currentColor",
                              }
                            }
                            iconVerticalAlign="middle"
                            iconViewBox="0 0 24 24"
                            size={25}
                          >
                            <ForwardRef
                              className="c3"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                }
                              }
                              iconVerticalAlign="middle"
                              iconViewBox="0 0 24 24"
                              size={25}
                            >
                              <svg
                                aria-hidden="true"
                                className="c3"
                                fill="currentColor"
                                focusable="false"
                                height={25}
                                viewBox="0 0 24 24"
                                width={25}
                              >
                                <path
                                  d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                                  key="k0"
                                />
                              </svg>
                            </ForwardRef>
                          </StyledComponent>
                        </StyledIconBase>
                      </ArrowForward>
                    </button>
                  </StyledComponent>
                </CloseButton>
                <div
                  className="title"
                >
                  Mrs. Earline Bradtke's Cart
                </div>
              </header>
            </StyledComponent>
          </CartHeader__CartHeaderStyles>
        </CartHeader>
        <ul>
          <CartItem
            cartItem={
              Object {
                "__typename": "CartItem",
                "id": "123",
                "product": Object {
                  "__typename": "Product",
                  "bead": "RED_JASPER",
                  "description": "This is not really real.",
                  "id": "123",
                  "images": Array [
                    "image1.png",
                    "image2.png",
                  ],
                  "price": 1000,
                  "title": "A Fake Product",
                  "variant": "NECKLACE",
                },
                "user": Object {
                  "__typename": "User",
                  "cart": Array [],
                  "email": "Murphy_Abshire@Bruen.biz",
                  "id": "123",
                  "image": "image.png",
                  "name": "Ms. Emile Greenfelder",
                  "orders": Array [],
                  "role": "ADMIN",
                },
              }
            }
            key="123"
          >
            <CartItem__CartItemStyles>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "CartItem__CartItemStyles-sc-1dqebp1-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        "display:grid;align-items:center;grid-template-columns:10rem 1fr auto;background:white;padding:1rem 0;margin:1rem auto;box-shadow:",
                        [Function],
                        ";img{justify-self:center;width:7.5rem;border:1px solid ",
                        [Function],
                        ";}h3,p{margin:0;}",
                      ],
                    },
                    "displayName": "CartItem__CartItemStyles",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "CartItem__CartItemStyles-sc-1dqebp1-0",
                    "target": "li",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <li
                  className="c4"
                >
                  <img
                    src="image1.png"
                  />
                  <div>
                    <h3>
                      A Fake Product
                    </h3>
                    <p>
                      <em>
                        $10
                      </em>
                    </p>
                  </div>
                  <RemoveFromCart
                    id="123"
                    title="A Fake Product"
                  >
                    <Mutation
                      mutation={
                        Object {
                          "definitions": Array [
                            Object {
                              "directives": Array [],
                              "kind": "OperationDefinition",
                              "name": Object {
                                "kind": "Name",
                                "value": "removeFromCart",
                              },
                              "operation": "mutation",
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [
                                      Object {
                                        "kind": "Argument",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "value": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                        },
                                      },
                                    ],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "removeFromCart",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                              "variableDefinitions": Array [
                                Object {
                                  "defaultValue": undefined,
                                  "kind": "VariableDefinition",
                                  "type": Object {
                                    "kind": "NonNullType",
                                    "type": Object {
                                      "kind": "NamedType",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "ID",
                                      },
                                    },
                                  },
                                  "variable": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                  },
                                },
                              ],
                            },
                          ],
                          "kind": "Document",
                          "loc": Object {
                            "end": 88,
                            "start": 0,
                          },
                        }
                      }
                      optimisticResponse={
                        Object {
                          "__typename": "Mutation",
                          "removeFromCart": Object {
                            "__typename": "CartItem",
                            "id": "123",
                          },
                        }
                      }
                      update={[Function]}
                      variables={
                        Object {
                          "id": "123",
                        }
                      }
                    >
                      <RemoveButton
                        disabled={false}
                        onClick={[Function]}
                        title="Remove Item"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "RemoveButton-fpmibo-0",
                                "isStatic": true,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "font-size:3rem;background:none;outline:none;border:none;margin-right:1rem;transition:0.3s;&:hover{color:red;cursor:pointer;}",
                                ],
                              },
                              "displayName": "RemoveButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "RemoveButton-fpmibo-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          title="Remove Item"
                        >
                          <button
                            className="c5"
                            disabled={false}
                            onClick={[Function]}
                            title="Remove Item"
                          >
                            <Close
                              size={25}
                            >
                              <StyledIconBase
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 24 24"
                                size={25}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "StyledIconBase-sc-bdy9j4",
                                        "isStatic": false,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "
  display: inline-block;
  vertical-align: ",
                                          [Function],
                                          ";
  overflow: hidden;
",
                                        ],
                                      },
                                      "displayName": "StyledIconBase",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "StyledIconBase-sc-bdy9j4",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 24 24"
                                  size={25}
                                >
                                  <ForwardRef
                                    className="c3"
                                    iconAttrs={
                                      Object {
                                        "fill": "currentColor",
                                      }
                                    }
                                    iconVerticalAlign="middle"
                                    iconViewBox="0 0 24 24"
                                    size={25}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="c3"
                                      fill="currentColor"
                                      focusable="false"
                                      height={25}
                                      viewBox="0 0 24 24"
                                      width={25}
                                    >
                                      <path
                                        d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                        key="k0"
                                      />
                                    </svg>
                                  </ForwardRef>
                                </StyledComponent>
                              </StyledIconBase>
                            </Close>
                          </button>
                        </StyledComponent>
                      </RemoveButton>
                    </Mutation>
                  </RemoveFromCart>
                </li>
              </StyledComponent>
            </CartItem__CartItemStyles>
          </CartItem>
        </ul>
        <CartFooter
          cart={
            Array [
              Object {
                "__typename": "CartItem",
                "id": "123",
                "product": Object {
                  "__typename": "Product",
                  "bead": "RED_JASPER",
                  "description": "This is not really real.",
                  "id": "123",
                  "images": Array [
                    "image1.png",
                    "image2.png",
                  ],
                  "price": 1000,
                  "title": "A Fake Product",
                  "variant": "NECKLACE",
                },
                "user": Object {
                  "__typename": "User",
                  "cart": Array [],
                  "email": "Murphy_Abshire@Bruen.biz",
                  "id": "123",
                  "image": "image.png",
                  "name": "Ms. Emile Greenfelder",
                  "orders": Array [],
                  "role": "ADMIN",
                },
              },
            ]
          }
          email="Darrell_Dooley@Rogahn.biz"
          subTotal="$10"
          tax="$0.80"
          total="$10.80"
        >
          <CartFooter__CartFooterStyles
            cart={true}
          >
            <StyledComponent
              cart={true}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                    "isStatic": false,
                    "lastClassName": "c6",
                    "rules": Array [
                      "display:grid;grid-template-columns:1fr 1fr;justify-items:center;align-items:center;border-top:10px double ",
                      [Function],
                      ";background:white;padding:1rem;.totals{opacity:",
                      [Function],
                      ";& >:last-child{font-size:3rem;}}",
                    ],
                  },
                  "displayName": "CartFooter__CartFooterStyles",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                  "target": "footer",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <footer
                className="c6"
              >
                <div
                  className="totals"
                >
                  <div>
                    Subtotal: 
                    $10
                  </div>
                  <div>
                    Tax: 
                    $0.80
                  </div>
                  <div>
                    $10.80
                  </div>
                </div>
                <Checkout
                  cart={
                    Array [
                      Object {
                        "__typename": "CartItem",
                        "id": "123",
                        "product": Object {
                          "__typename": "Product",
                          "bead": "RED_JASPER",
                          "description": "This is not really real.",
                          "id": "123",
                          "images": Array [
                            "image1.png",
                            "image2.png",
                          ],
                          "price": 1000,
                          "title": "A Fake Product",
                          "variant": "NECKLACE",
                        },
                        "user": Object {
                          "__typename": "User",
                          "cart": Array [],
                          "email": "Murphy_Abshire@Bruen.biz",
                          "id": "123",
                          "image": "image.png",
                          "name": "Ms. Emile Greenfelder",
                          "orders": Array [],
                          "role": "ADMIN",
                        },
                      },
                    ]
                  }
                  email="Darrell_Dooley@Rogahn.biz"
                >
                  <Adopt(createOrder)(toggleCart)>
                    <Adopt(createOrder)>
                      <Adopt>
                        <createOrder
                          render={[Function]}
                        >
                          <Mutation
                            mutation={
                              Object {
                                "definitions": Array [
                                  Object {
                                    "directives": Array [],
                                    "kind": "OperationDefinition",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "createOrder",
                                    },
                                    "operation": "mutation",
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [
                                            Object {
                                              "kind": "Argument",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "token",
                                              },
                                              "value": Object {
                                                "kind": "Variable",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "token",
                                                },
                                              },
                                            },
                                            Object {
                                              "kind": "Argument",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "data",
                                              },
                                              "value": Object {
                                                "kind": "Variable",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "data",
                                                },
                                              },
                                            },
                                          ],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "createOrder",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "charge",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "total",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "items",
                                                },
                                                "selectionSet": Object {
                                                  "kind": "SelectionSet",
                                                  "selections": Array [
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "id",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "title",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "variableDefinitions": Array [
                                      Object {
                                        "defaultValue": undefined,
                                        "kind": "VariableDefinition",
                                        "type": Object {
                                          "kind": "NonNullType",
                                          "type": Object {
                                            "kind": "NamedType",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "String",
                                            },
                                          },
                                        },
                                        "variable": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "token",
                                          },
                                        },
                                      },
                                      Object {
                                        "defaultValue": undefined,
                                        "kind": "VariableDefinition",
                                        "type": Object {
                                          "kind": "NonNullType",
                                          "type": Object {
                                            "kind": "NamedType",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "AddressCreateInput",
                                            },
                                          },
                                        },
                                        "variable": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "data",
                                          },
                                        },
                                      },
                                    ],
                                  },
                                ],
                                "kind": "Document",
                                "loc": Object {
                                  "end": 208,
                                  "start": 0,
                                },
                              }
                            }
                            refetchQueries={
                              Array [
                                Object {
                                  "query": Object {
                                    "definitions": Array [
                                      Object {
                                        "directives": Array [],
                                        "kind": "OperationDefinition",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "CURRENT_USER_QUERY",
                                        },
                                        "operation": "query",
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "me",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "email",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "name",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "image",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "role",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "cart",
                                                    },
                                                    "selectionSet": Object {
                                                      "kind": "SelectionSet",
                                                      "selections": Array [
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "id",
                                                          },
                                                          "selectionSet": undefined,
                                                        },
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "product",
                                                          },
                                                          "selectionSet": Object {
                                                            "kind": "SelectionSet",
                                                            "selections": Array [
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "id",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "title",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "images",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "price",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "variant",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "bead",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                            ],
                                                          },
                                                        },
                                                      ],
                                                    },
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "orders",
                                                    },
                                                    "selectionSet": Object {
                                                      "kind": "SelectionSet",
                                                      "selections": Array [
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "id",
                                                          },
                                                          "selectionSet": undefined,
                                                        },
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "charge",
                                                          },
                                                          "selectionSet": undefined,
                                                        },
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "total",
                                                          },
                                                          "selectionSet": undefined,
                                                        },
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "shipped",
                                                          },
                                                          "selectionSet": undefined,
                                                        },
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "createdAt",
                                                          },
                                                          "selectionSet": undefined,
                                                        },
                                                        Object {
                                                          "alias": undefined,
                                                          "arguments": Array [],
                                                          "directives": Array [],
                                                          "kind": "Field",
                                                          "name": Object {
                                                            "kind": "Name",
                                                            "value": "items",
                                                          },
                                                          "selectionSet": Object {
                                                            "kind": "SelectionSet",
                                                            "selections": Array [
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "id",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                              Object {
                                                                "alias": undefined,
                                                                "arguments": Array [],
                                                                "directives": Array [],
                                                                "kind": "Field",
                                                                "name": Object {
                                                                  "kind": "Name",
                                                                  "value": "images",
                                                                },
                                                                "selectionSet": undefined,
                                                              },
                                                            ],
                                                          },
                                                        },
                                                      ],
                                                    },
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                        "variableDefinitions": Array [],
                                      },
                                    ],
                                    "kind": "Document",
                                    "loc": Object {
                                      "end": 412,
                                      "start": 0,
                                    },
                                  },
                                },
                                Object {
                                  "query": Object {
                                    "definitions": Array [
                                      Object {
                                        "directives": Array [],
                                        "kind": "OperationDefinition",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "ALL_PRODUCTS_QUERY",
                                        },
                                        "operation": "query",
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [
                                                Object {
                                                  "kind": "Argument",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "skip",
                                                  },
                                                  "value": Object {
                                                    "kind": "Variable",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "skip",
                                                    },
                                                  },
                                                },
                                                Object {
                                                  "kind": "Argument",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "first",
                                                  },
                                                  "value": Object {
                                                    "kind": "Variable",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "first",
                                                    },
                                                  },
                                                },
                                                Object {
                                                  "kind": "Argument",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "where",
                                                  },
                                                  "value": Object {
                                                    "kind": "Variable",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "where",
                                                    },
                                                  },
                                                },
                                                Object {
                                                  "kind": "Argument",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "orderBy",
                                                  },
                                                  "value": Object {
                                                    "kind": "Variable",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "orderBy",
                                                    },
                                                  },
                                                },
                                              ],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "products",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "title",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "description",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "images",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "price",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "variant",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "bead",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                        "variableDefinitions": Array [
                                          Object {
                                            "defaultValue": Object {
                                              "kind": "IntValue",
                                              "value": "0",
                                            },
                                            "kind": "VariableDefinition",
                                            "type": Object {
                                              "kind": "NamedType",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "Int",
                                              },
                                            },
                                            "variable": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "skip",
                                              },
                                            },
                                          },
                                          Object {
                                            "defaultValue": Object {
                                              "kind": "IntValue",
                                              "value": "8",
                                            },
                                            "kind": "VariableDefinition",
                                            "type": Object {
                                              "kind": "NamedType",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "Int",
                                              },
                                            },
                                            "variable": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "first",
                                              },
                                            },
                                          },
                                          Object {
                                            "defaultValue": undefined,
                                            "kind": "VariableDefinition",
                                            "type": Object {
                                              "kind": "NamedType",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "ProductWhereInput",
                                              },
                                            },
                                            "variable": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "where",
                                              },
                                            },
                                          },
                                          Object {
                                            "defaultValue": Object {
                                              "kind": "EnumValue",
                                              "value": "title_ASC",
                                            },
                                            "kind": "VariableDefinition",
                                            "type": Object {
                                              "kind": "NamedType",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "ProductOrderByInput",
                                              },
                                            },
                                            "variable": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "orderBy",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    ],
                                    "kind": "Document",
                                    "loc": Object {
                                      "end": 309,
                                      "start": 0,
                                    },
                                  },
                                  "variables": Object {
                                    "skip": 0,
                                    "where": Object {
                                      "sold": false,
                                    },
                                  },
                                },
                              ]
                            }
                          >
                            <toggleCart
                              createOrder={[Function]}
                              render={[Function]}
                            >
                              <Mutation
                                mutation={
                                  Object {
                                    "definitions": Array [
                                      Object {
                                        "directives": Array [],
                                        "kind": "OperationDefinition",
                                        "name": undefined,
                                        "operation": "mutation",
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [
                                                Object {
                                                  "arguments": Array [],
                                                  "kind": "Directive",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "client",
                                                  },
                                                },
                                              ],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "toggleCart",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                        "variableDefinitions": Array [],
                                      },
                                    ],
                                    "kind": "Document",
                                    "loc": Object {
                                      "end": 41,
                                      "start": 0,
                                    },
                                  }
                                }
                              >
                                <ReactStripeCheckout
                                  ComponentClass="span"
                                  amount={1080}
                                  billingAddress={true}
                                  className="StripeCheckout"
                                  currency="USD"
                                  description="Order of 1 item!"
                                  email="Darrell_Dooley@Rogahn.biz"
                                  image="https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png"
                                  label="Pay With Card"
                                  locale="auto"
                                  name="Anne's Handmade"
                                  panelLabel="Buy Stuff 🤑"
                                  reconfigureOnUpdate={false}
                                  shippingAddress={true}
                                  stripeKey="pk_test_htV5BwONms8PGEJ4RVZgsOgU"
                                  token={[Function]}
                                  triggerEvent="onClick"
                                >
                                  <span
                                    onClick={[Function]}
                                  >
                                    <CheckoutButton>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "CheckoutButton-sc-7jm8jz-0",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "font-family:'Raleway';font-size:2.5rem;padding:0.5rem;border:none;outline:none;cursor:pointer;background:",
                                                [Function],
                                                ";color:",
                                                [Function],
                                                ";transition:all 0.5s ease-in-out;&:hover{box-shadow:",
                                                [Function],
                                                ";}",
                                                "@media (max-width:",
                                                "36",
                                                "em){",
                                                "
    font-size: 2rem;
  ",
                                                "}",
                                                "padding:2rem 4rem;",
                                              ],
                                            },
                                            "displayName": "CheckoutButton",
                                            "foldedComponentIds": Array [
                                              "GreenButton-sc-1bjesnv-0",
                                            ],
                                            "render": [Function],
                                            "styledComponentId": "CheckoutButton-sc-7jm8jz-0",
                                            "target": "button",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <button
                                          className="c7"
                                        >
                                          Checkout
                                        </button>
                                      </StyledComponent>
                                    </CheckoutButton>
                                  </span>
                                </ReactStripeCheckout>
                              </Mutation>
                            </toggleCart>
                          </Mutation>
                        </createOrder>
                      </Adopt>
                    </Adopt(createOrder)>
                  </Adopt(createOrder)(toggleCart)>
                </Checkout>
              </footer>
            </StyledComponent>
          </CartFooter__CartFooterStyles>
        </CartFooter>
      </div>
    </StyledComponent>
  </Cart__CartStyles>,
  .c0 {
  position: fixed;
  min-width: 500px;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  display: grid;
  grid-template-rows: auto 1fr auto;
  background: #FAFAFA;
  box-shadow: 0 0 10px 3px rgba(0,0,0,0.2);
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}

.c0 ul {
  background: #F0F0F0;
  margin: 0;
  padding: 0 2rem;
  list-style: none;
  overflow: auto;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c2 {
  position: absolute;
  z-index: 2;
  top: 3rem;
  right: 0rem;
  background: #333333;
  color: #FF80B5;
  border: 0;
  outline: 0;
  cursor: pointer;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c2:hover {
  color: #ff1a7a;
}

.c1 {
  background: #333333;
  border-left: 10px solid #FF80B5;
  padding: 1rem;
}

.c1 .title {
  font-size: 3.5rem;
  color: white;
  text-align: center;
}

.c7 {
  font-family: 'Raleway';
  font-size: 2.5rem;
  padding: 0.5rem;
  border: none;
  outline: none;
  cursor: pointer;
  background: #29FFA6;
  color: #3D3D3D;
  -webkit-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  padding: 2rem 4rem;
}

.c7:hover {
  box-shadow: 0 12px 24px 0 rgba(0,0,0,0.09);
}

.c6 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 10px double #333333;
  background: white;
  padding: 1rem;
}

.c6 .totals {
  opacity: 1;
}

.c6 .totals >:last-child {
  font-size: 3rem;
}

.c5 {
  font-size: 3rem;
  background: none;
  outline: none;
  border: none;
  margin-right: 1rem;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c5:hover {
  color: red;
  cursor: pointer;
}

.c4 {
  display: grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  grid-template-columns: 10rem 1fr auto;
  background: white;
  padding: 1rem 0;
  margin: 1rem auto;
  box-shadow: 0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12);
}

.c4 img {
  justify-self: center;
  width: 7.5rem;
  border: 1px solid #E0E0E0;
}

.c4 h3,
.c4 p {
  margin: 0;
}

@media (max-width:36em) {
  .c0 {
    min-width: 350px;
  }
}

@media (max-width:36em) {
  .c7 {
    font-size: 2rem;
  }
}

<StyledComponent
    data-test="cart"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Cart__CartStyles-sc-16y1lxx-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "position:fixed;min-width:500px;height:100%;top:0;right:0;bottom:0;z-index:5;display:grid;grid-template-rows:auto 1fr auto;background:",
            [Function],
            ";box-shadow:0 0 10px 3px rgba(0,0,0,0.2);transform:",
            [Function],
            ";transition:all 0.5s ease-out;",
            "@media (max-width:",
            "36",
            "em){",
            "
    min-width: 350px;
  ",
            "}",
            " ul{background:",
            [Function],
            ";margin:0;padding:0 2rem;list-style:none;overflow:auto;}",
          ],
        },
        "displayName": "Cart__CartStyles",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Cart__CartStyles-sc-16y1lxx-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0"
      data-test="cart"
    >
      <CartHeader
        title="Mrs. Earline Bradtke's Cart"
        toggleCart={[Function]}
      >
        <CartHeader__CartHeaderStyles>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "background:",
                    [Function],
                    ";border-left:10px solid ",
                    [Function],
                    ";padding:1rem;.title{font-size:3.5rem;color:white;text-align:center;}",
                  ],
                },
                "displayName": "CartHeader__CartHeaderStyles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                "target": "header",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <header
              className="c1"
            >
              <CloseButton
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "CloseButton-sc-1atzcdg-0",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "position:absolute;z-index:2;top:3rem;right:0rem;background:",
                          [Function],
                          ";color:",
                          [Function],
                          ";border:0;outline:0;cursor:pointer;transition:0.3s;&:hover{color:",
                          [Function],
                          ";}",
                        ],
                      },
                      "displayName": "CloseButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "CloseButton-sc-1atzcdg-0",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <button
                    className="c2"
                    onClick={[Function]}
                  >
                    <ArrowForward
                      size={25}
                    >
                      <StyledIconBase
                        iconAttrs={
                          Object {
                            "fill": "currentColor",
                          }
                        }
                        iconVerticalAlign="middle"
                        iconViewBox="0 0 24 24"
                        size={25}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "StyledIconBase-sc-bdy9j4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  display: inline-block;
  vertical-align: ",
                                  [Function],
                                  ";
  overflow: hidden;
",
                                ],
                              },
                              "displayName": "StyledIconBase",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "StyledIconBase-sc-bdy9j4",
                              "target": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          iconAttrs={
                            Object {
                              "fill": "currentColor",
                            }
                          }
                          iconVerticalAlign="middle"
                          iconViewBox="0 0 24 24"
                          size={25}
                        >
                          <ForwardRef
                            className="c3"
                            iconAttrs={
                              Object {
                                "fill": "currentColor",
                              }
                            }
                            iconVerticalAlign="middle"
                            iconViewBox="0 0 24 24"
                            size={25}
                          >
                            <svg
                              aria-hidden="true"
                              className="c3"
                              fill="currentColor"
                              focusable="false"
                              height={25}
                              viewBox="0 0 24 24"
                              width={25}
                            >
                              <path
                                d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                                key="k0"
                              />
                            </svg>
                          </ForwardRef>
                        </StyledComponent>
                      </StyledIconBase>
                    </ArrowForward>
                  </button>
                </StyledComponent>
              </CloseButton>
              <div
                className="title"
              >
                Mrs. Earline Bradtke's Cart
              </div>
            </header>
          </StyledComponent>
        </CartHeader__CartHeaderStyles>
      </CartHeader>
      <ul>
        <CartItem
          cartItem={
            Object {
              "__typename": "CartItem",
              "id": "123",
              "product": Object {
                "__typename": "Product",
                "bead": "RED_JASPER",
                "description": "This is not really real.",
                "id": "123",
                "images": Array [
                  "image1.png",
                  "image2.png",
                ],
                "price": 1000,
                "title": "A Fake Product",
                "variant": "NECKLACE",
              },
              "user": Object {
                "__typename": "User",
                "cart": Array [],
                "email": "Murphy_Abshire@Bruen.biz",
                "id": "123",
                "image": "image.png",
                "name": "Ms. Emile Greenfelder",
                "orders": Array [],
                "role": "ADMIN",
              },
            }
          }
          key="123"
        >
          <CartItem__CartItemStyles>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "CartItem__CartItemStyles-sc-1dqebp1-0",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      "display:grid;align-items:center;grid-template-columns:10rem 1fr auto;background:white;padding:1rem 0;margin:1rem auto;box-shadow:",
                      [Function],
                      ";img{justify-self:center;width:7.5rem;border:1px solid ",
                      [Function],
                      ";}h3,p{margin:0;}",
                    ],
                  },
                  "displayName": "CartItem__CartItemStyles",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "CartItem__CartItemStyles-sc-1dqebp1-0",
                  "target": "li",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <li
                className="c4"
              >
                <img
                  src="image1.png"
                />
                <div>
                  <h3>
                    A Fake Product
                  </h3>
                  <p>
                    <em>
                      $10
                    </em>
                  </p>
                </div>
                <RemoveFromCart
                  id="123"
                  title="A Fake Product"
                >
                  <Mutation
                    mutation={
                      Object {
                        "definitions": Array [
                          Object {
                            "directives": Array [],
                            "kind": "OperationDefinition",
                            "name": Object {
                              "kind": "Name",
                              "value": "removeFromCart",
                            },
                            "operation": "mutation",
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [
                                    Object {
                                      "kind": "Argument",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "value": Object {
                                        "kind": "Variable",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                      },
                                    },
                                  ],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "removeFromCart",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            "variableDefinitions": Array [
                              Object {
                                "defaultValue": undefined,
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NonNullType",
                                  "type": Object {
                                    "kind": "NamedType",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "ID",
                                    },
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                },
                              },
                            ],
                          },
                        ],
                        "kind": "Document",
                        "loc": Object {
                          "end": 88,
                          "start": 0,
                        },
                      }
                    }
                    optimisticResponse={
                      Object {
                        "__typename": "Mutation",
                        "removeFromCart": Object {
                          "__typename": "CartItem",
                          "id": "123",
                        },
                      }
                    }
                    update={[Function]}
                    variables={
                      Object {
                        "id": "123",
                      }
                    }
                  >
                    <RemoveButton
                      disabled={false}
                      onClick={[Function]}
                      title="Remove Item"
                    >
                      <StyledComponent
                        disabled={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "RemoveButton-fpmibo-0",
                              "isStatic": true,
                              "lastClassName": "c5",
                              "rules": Array [
                                "font-size:3rem;background:none;outline:none;border:none;margin-right:1rem;transition:0.3s;&:hover{color:red;cursor:pointer;}",
                              ],
                            },
                            "displayName": "RemoveButton",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "RemoveButton-fpmibo-0",
                            "target": "button",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        title="Remove Item"
                      >
                        <button
                          className="c5"
                          disabled={false}
                          onClick={[Function]}
                          title="Remove Item"
                        >
                          <Close
                            size={25}
                          >
                            <StyledIconBase
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                }
                              }
                              iconVerticalAlign="middle"
                              iconViewBox="0 0 24 24"
                              size={25}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "StyledIconBase-sc-bdy9j4",
                                      "isStatic": false,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "
  display: inline-block;
  vertical-align: ",
                                        [Function],
                                        ";
  overflow: hidden;
",
                                      ],
                                    },
                                    "displayName": "StyledIconBase",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "StyledIconBase-sc-bdy9j4",
                                    "target": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 24 24"
                                size={25}
                              >
                                <ForwardRef
                                  className="c3"
                                  iconAttrs={
                                    Object {
                                      "fill": "currentColor",
                                    }
                                  }
                                  iconVerticalAlign="middle"
                                  iconViewBox="0 0 24 24"
                                  size={25}
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="c3"
                                    fill="currentColor"
                                    focusable="false"
                                    height={25}
                                    viewBox="0 0 24 24"
                                    width={25}
                                  >
                                    <path
                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                      key="k0"
                                    />
                                  </svg>
                                </ForwardRef>
                              </StyledComponent>
                            </StyledIconBase>
                          </Close>
                        </button>
                      </StyledComponent>
                    </RemoveButton>
                  </Mutation>
                </RemoveFromCart>
              </li>
            </StyledComponent>
          </CartItem__CartItemStyles>
        </CartItem>
      </ul>
      <CartFooter
        cart={
          Array [
            Object {
              "__typename": "CartItem",
              "id": "123",
              "product": Object {
                "__typename": "Product",
                "bead": "RED_JASPER",
                "description": "This is not really real.",
                "id": "123",
                "images": Array [
                  "image1.png",
                  "image2.png",
                ],
                "price": 1000,
                "title": "A Fake Product",
                "variant": "NECKLACE",
              },
              "user": Object {
                "__typename": "User",
                "cart": Array [],
                "email": "Murphy_Abshire@Bruen.biz",
                "id": "123",
                "image": "image.png",
                "name": "Ms. Emile Greenfelder",
                "orders": Array [],
                "role": "ADMIN",
              },
            },
          ]
        }
        email="Darrell_Dooley@Rogahn.biz"
        subTotal="$10"
        tax="$0.80"
        total="$10.80"
      >
        <CartFooter__CartFooterStyles
          cart={true}
        >
          <StyledComponent
            cart={true}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                  "isStatic": false,
                  "lastClassName": "c6",
                  "rules": Array [
                    "display:grid;grid-template-columns:1fr 1fr;justify-items:center;align-items:center;border-top:10px double ",
                    [Function],
                    ";background:white;padding:1rem;.totals{opacity:",
                    [Function],
                    ";& >:last-child{font-size:3rem;}}",
                  ],
                },
                "displayName": "CartFooter__CartFooterStyles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                "target": "footer",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <footer
              className="c6"
            >
              <div
                className="totals"
              >
                <div>
                  Subtotal: 
                  $10
                </div>
                <div>
                  Tax: 
                  $0.80
                </div>
                <div>
                  $10.80
                </div>
              </div>
              <Checkout
                cart={
                  Array [
                    Object {
                      "__typename": "CartItem",
                      "id": "123",
                      "product": Object {
                        "__typename": "Product",
                        "bead": "RED_JASPER",
                        "description": "This is not really real.",
                        "id": "123",
                        "images": Array [
                          "image1.png",
                          "image2.png",
                        ],
                        "price": 1000,
                        "title": "A Fake Product",
                        "variant": "NECKLACE",
                      },
                      "user": Object {
                        "__typename": "User",
                        "cart": Array [],
                        "email": "Murphy_Abshire@Bruen.biz",
                        "id": "123",
                        "image": "image.png",
                        "name": "Ms. Emile Greenfelder",
                        "orders": Array [],
                        "role": "ADMIN",
                      },
                    },
                  ]
                }
                email="Darrell_Dooley@Rogahn.biz"
              >
                <Adopt(createOrder)(toggleCart)>
                  <Adopt(createOrder)>
                    <Adopt>
                      <createOrder
                        render={[Function]}
                      >
                        <Mutation
                          mutation={
                            Object {
                              "definitions": Array [
                                Object {
                                  "directives": Array [],
                                  "kind": "OperationDefinition",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "createOrder",
                                  },
                                  "operation": "mutation",
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [
                                          Object {
                                            "kind": "Argument",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "token",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "token",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "Argument",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "data",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "data",
                                              },
                                            },
                                          },
                                        ],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "createOrder",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "charge",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "total",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "items",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "title",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "variableDefinitions": Array [
                                    Object {
                                      "defaultValue": undefined,
                                      "kind": "VariableDefinition",
                                      "type": Object {
                                        "kind": "NonNullType",
                                        "type": Object {
                                          "kind": "NamedType",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "String",
                                          },
                                        },
                                      },
                                      "variable": Object {
                                        "kind": "Variable",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "token",
                                        },
                                      },
                                    },
                                    Object {
                                      "defaultValue": undefined,
                                      "kind": "VariableDefinition",
                                      "type": Object {
                                        "kind": "NonNullType",
                                        "type": Object {
                                          "kind": "NamedType",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "AddressCreateInput",
                                          },
                                        },
                                      },
                                      "variable": Object {
                                        "kind": "Variable",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "data",
                                        },
                                      },
                                    },
                                  ],
                                },
                              ],
                              "kind": "Document",
                              "loc": Object {
                                "end": 208,
                                "start": 0,
                              },
                            }
                          }
                          refetchQueries={
                            Array [
                              Object {
                                "query": Object {
                                  "definitions": Array [
                                    Object {
                                      "directives": Array [],
                                      "kind": "OperationDefinition",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "CURRENT_USER_QUERY",
                                      },
                                      "operation": "query",
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "me",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "email",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "image",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "role",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "cart",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "id",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "product",
                                                        },
                                                        "selectionSet": Object {
                                                          "kind": "SelectionSet",
                                                          "selections": Array [
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "id",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "title",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "images",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "price",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "variant",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "bead",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                          ],
                                                        },
                                                      },
                                                    ],
                                                  },
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "orders",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "id",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "charge",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "total",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "shipped",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "createdAt",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "items",
                                                        },
                                                        "selectionSet": Object {
                                                          "kind": "SelectionSet",
                                                          "selections": Array [
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "id",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                            Object {
                                                              "alias": undefined,
                                                              "arguments": Array [],
                                                              "directives": Array [],
                                                              "kind": "Field",
                                                              "name": Object {
                                                                "kind": "Name",
                                                                "value": "images",
                                                              },
                                                              "selectionSet": undefined,
                                                            },
                                                          ],
                                                        },
                                                      },
                                                    ],
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                      "variableDefinitions": Array [],
                                    },
                                  ],
                                  "kind": "Document",
                                  "loc": Object {
                                    "end": 412,
                                    "start": 0,
                                  },
                                },
                              },
                              Object {
                                "query": Object {
                                  "definitions": Array [
                                    Object {
                                      "directives": Array [],
                                      "kind": "OperationDefinition",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "ALL_PRODUCTS_QUERY",
                                      },
                                      "operation": "query",
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [
                                              Object {
                                                "kind": "Argument",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "skip",
                                                },
                                                "value": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "skip",
                                                  },
                                                },
                                              },
                                              Object {
                                                "kind": "Argument",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "first",
                                                },
                                                "value": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "first",
                                                  },
                                                },
                                              },
                                              Object {
                                                "kind": "Argument",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "where",
                                                },
                                                "value": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "where",
                                                  },
                                                },
                                              },
                                              Object {
                                                "kind": "Argument",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "orderBy",
                                                },
                                                "value": Object {
                                                  "kind": "Variable",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "orderBy",
                                                  },
                                                },
                                              },
                                            ],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "products",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "title",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "description",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "images",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "price",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "variant",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "bead",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                      "variableDefinitions": Array [
                                        Object {
                                          "defaultValue": Object {
                                            "kind": "IntValue",
                                            "value": "0",
                                          },
                                          "kind": "VariableDefinition",
                                          "type": Object {
                                            "kind": "NamedType",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "Int",
                                            },
                                          },
                                          "variable": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "skip",
                                            },
                                          },
                                        },
                                        Object {
                                          "defaultValue": Object {
                                            "kind": "IntValue",
                                            "value": "8",
                                          },
                                          "kind": "VariableDefinition",
                                          "type": Object {
                                            "kind": "NamedType",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "Int",
                                            },
                                          },
                                          "variable": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "first",
                                            },
                                          },
                                        },
                                        Object {
                                          "defaultValue": undefined,
                                          "kind": "VariableDefinition",
                                          "type": Object {
                                            "kind": "NamedType",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "ProductWhereInput",
                                            },
                                          },
                                          "variable": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "where",
                                            },
                                          },
                                        },
                                        Object {
                                          "defaultValue": Object {
                                            "kind": "EnumValue",
                                            "value": "title_ASC",
                                          },
                                          "kind": "VariableDefinition",
                                          "type": Object {
                                            "kind": "NamedType",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "ProductOrderByInput",
                                            },
                                          },
                                          "variable": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "orderBy",
                                            },
                                          },
                                        },
                                      ],
                                    },
                                  ],
                                  "kind": "Document",
                                  "loc": Object {
                                    "end": 309,
                                    "start": 0,
                                  },
                                },
                                "variables": Object {
                                  "skip": 0,
                                  "where": Object {
                                    "sold": false,
                                  },
                                },
                              },
                            ]
                          }
                        >
                          <toggleCart
                            createOrder={[Function]}
                            render={[Function]}
                          >
                            <Mutation
                              mutation={
                                Object {
                                  "definitions": Array [
                                    Object {
                                      "directives": Array [],
                                      "kind": "OperationDefinition",
                                      "name": undefined,
                                      "operation": "mutation",
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [
                                              Object {
                                                "arguments": Array [],
                                                "kind": "Directive",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "client",
                                                },
                                              },
                                            ],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "toggleCart",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                      "variableDefinitions": Array [],
                                    },
                                  ],
                                  "kind": "Document",
                                  "loc": Object {
                                    "end": 41,
                                    "start": 0,
                                  },
                                }
                              }
                            >
                              <ReactStripeCheckout
                                ComponentClass="span"
                                amount={1080}
                                billingAddress={true}
                                className="StripeCheckout"
                                currency="USD"
                                description="Order of 1 item!"
                                email="Darrell_Dooley@Rogahn.biz"
                                image="https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png"
                                label="Pay With Card"
                                locale="auto"
                                name="Anne's Handmade"
                                panelLabel="Buy Stuff 🤑"
                                reconfigureOnUpdate={false}
                                shippingAddress={true}
                                stripeKey="pk_test_htV5BwONms8PGEJ4RVZgsOgU"
                                token={[Function]}
                                triggerEvent="onClick"
                              >
                                <span
                                  onClick={[Function]}
                                >
                                  <CheckoutButton>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "CheckoutButton-sc-7jm8jz-0",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "font-family:'Raleway';font-size:2.5rem;padding:0.5rem;border:none;outline:none;cursor:pointer;background:",
                                              [Function],
                                              ";color:",
                                              [Function],
                                              ";transition:all 0.5s ease-in-out;&:hover{box-shadow:",
                                              [Function],
                                              ";}",
                                              "@media (max-width:",
                                              "36",
                                              "em){",
                                              "
    font-size: 2rem;
  ",
                                              "}",
                                              "padding:2rem 4rem;",
                                            ],
                                          },
                                          "displayName": "CheckoutButton",
                                          "foldedComponentIds": Array [
                                            "GreenButton-sc-1bjesnv-0",
                                          ],
                                          "render": [Function],
                                          "styledComponentId": "CheckoutButton-sc-7jm8jz-0",
                                          "target": "button",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <button
                                        className="c7"
                                      >
                                        Checkout
                                      </button>
                                    </StyledComponent>
                                  </CheckoutButton>
                                </span>
                              </ReactStripeCheckout>
                            </Mutation>
                          </toggleCart>
                        </Mutation>
                      </createOrder>
                    </Adopt>
                  </Adopt(createOrder)>
                </Adopt(createOrder)(toggleCart)>
              </Checkout>
            </footer>
          </StyledComponent>
        </CartFooter__CartFooterStyles>
      </CartFooter>
    </div>
  </StyledComponent>,
  .c0 {
  position: fixed;
  min-width: 500px;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  display: grid;
  grid-template-rows: auto 1fr auto;
  background: #FAFAFA;
  box-shadow: 0 0 10px 3px rgba(0,0,0,0.2);
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}

.c0 ul {
  background: #F0F0F0;
  margin: 0;
  padding: 0 2rem;
  list-style: none;
  overflow: auto;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c2 {
  position: absolute;
  z-index: 2;
  top: 3rem;
  right: 0rem;
  background: #333333;
  color: #FF80B5;
  border: 0;
  outline: 0;
  cursor: pointer;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c2:hover {
  color: #ff1a7a;
}

.c1 {
  background: #333333;
  border-left: 10px solid #FF80B5;
  padding: 1rem;
}

.c1 .title {
  font-size: 3.5rem;
  color: white;
  text-align: center;
}

.c7 {
  font-family: 'Raleway';
  font-size: 2.5rem;
  padding: 0.5rem;
  border: none;
  outline: none;
  cursor: pointer;
  background: #29FFA6;
  color: #3D3D3D;
  -webkit-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  padding: 2rem 4rem;
}

.c7:hover {
  box-shadow: 0 12px 24px 0 rgba(0,0,0,0.09);
}

.c6 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 10px double #333333;
  background: white;
  padding: 1rem;
}

.c6 .totals {
  opacity: 1;
}

.c6 .totals >:last-child {
  font-size: 3rem;
}

.c5 {
  font-size: 3rem;
  background: none;
  outline: none;
  border: none;
  margin-right: 1rem;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c5:hover {
  color: red;
  cursor: pointer;
}

.c4 {
  display: grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  grid-template-columns: 10rem 1fr auto;
  background: white;
  padding: 1rem 0;
  margin: 1rem auto;
  box-shadow: 0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12);
}

.c4 img {
  justify-self: center;
  width: 7.5rem;
  border: 1px solid #E0E0E0;
}

.c4 h3,
.c4 p {
  margin: 0;
}

@media (max-width:36em) {
  .c0 {
    min-width: 350px;
  }
}

@media (max-width:36em) {
  .c7 {
    font-size: 2rem;
  }
}

<div
    className="c0"
    data-test="cart"
  >
    <CartHeader
      title="Mrs. Earline Bradtke's Cart"
      toggleCart={[Function]}
    >
      <CartHeader__CartHeaderStyles>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  "background:",
                  [Function],
                  ";border-left:10px solid ",
                  [Function],
                  ";padding:1rem;.title{font-size:3.5rem;color:white;text-align:center;}",
                ],
              },
              "displayName": "CartHeader__CartHeaderStyles",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
              "target": "header",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <header
            className="c1"
          >
            <CloseButton
              onClick={[Function]}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "CloseButton-sc-1atzcdg-0",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "position:absolute;z-index:2;top:3rem;right:0rem;background:",
                        [Function],
                        ";color:",
                        [Function],
                        ";border:0;outline:0;cursor:pointer;transition:0.3s;&:hover{color:",
                        [Function],
                        ";}",
                      ],
                    },
                    "displayName": "CloseButton",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "CloseButton-sc-1atzcdg-0",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
              >
                <button
                  className="c2"
                  onClick={[Function]}
                >
                  <ArrowForward
                    size={25}
                  >
                    <StyledIconBase
                      iconAttrs={
                        Object {
                          "fill": "currentColor",
                        }
                      }
                      iconVerticalAlign="middle"
                      iconViewBox="0 0 24 24"
                      size={25}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "StyledIconBase-sc-bdy9j4",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  display: inline-block;
  vertical-align: ",
                                [Function],
                                ";
  overflow: hidden;
",
                              ],
                            },
                            "displayName": "StyledIconBase",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "StyledIconBase-sc-bdy9j4",
                            "target": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        iconAttrs={
                          Object {
                            "fill": "currentColor",
                          }
                        }
                        iconVerticalAlign="middle"
                        iconViewBox="0 0 24 24"
                        size={25}
                      >
                        <ForwardRef
                          className="c3"
                          iconAttrs={
                            Object {
                              "fill": "currentColor",
                            }
                          }
                          iconVerticalAlign="middle"
                          iconViewBox="0 0 24 24"
                          size={25}
                        >
                          <svg
                            aria-hidden="true"
                            className="c3"
                            fill="currentColor"
                            focusable="false"
                            height={25}
                            viewBox="0 0 24 24"
                            width={25}
                          >
                            <path
                              d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                              key="k0"
                            />
                          </svg>
                        </ForwardRef>
                      </StyledComponent>
                    </StyledIconBase>
                  </ArrowForward>
                </button>
              </StyledComponent>
            </CloseButton>
            <div
              className="title"
            >
              Mrs. Earline Bradtke's Cart
            </div>
          </header>
        </StyledComponent>
      </CartHeader__CartHeaderStyles>
    </CartHeader>
    <ul>
      <CartItem
        cartItem={
          Object {
            "__typename": "CartItem",
            "id": "123",
            "product": Object {
              "__typename": "Product",
              "bead": "RED_JASPER",
              "description": "This is not really real.",
              "id": "123",
              "images": Array [
                "image1.png",
                "image2.png",
              ],
              "price": 1000,
              "title": "A Fake Product",
              "variant": "NECKLACE",
            },
            "user": Object {
              "__typename": "User",
              "cart": Array [],
              "email": "Murphy_Abshire@Bruen.biz",
              "id": "123",
              "image": "image.png",
              "name": "Ms. Emile Greenfelder",
              "orders": Array [],
              "role": "ADMIN",
            },
          }
        }
        key="123"
      >
        <CartItem__CartItemStyles>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "CartItem__CartItemStyles-sc-1dqebp1-0",
                  "isStatic": false,
                  "lastClassName": "c4",
                  "rules": Array [
                    "display:grid;align-items:center;grid-template-columns:10rem 1fr auto;background:white;padding:1rem 0;margin:1rem auto;box-shadow:",
                    [Function],
                    ";img{justify-self:center;width:7.5rem;border:1px solid ",
                    [Function],
                    ";}h3,p{margin:0;}",
                  ],
                },
                "displayName": "CartItem__CartItemStyles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "CartItem__CartItemStyles-sc-1dqebp1-0",
                "target": "li",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <li
              className="c4"
            >
              <img
                src="image1.png"
              />
              <div>
                <h3>
                  A Fake Product
                </h3>
                <p>
                  <em>
                    $10
                  </em>
                </p>
              </div>
              <RemoveFromCart
                id="123"
                title="A Fake Product"
              >
                <Mutation
                  mutation={
                    Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "removeFromCart",
                          },
                          "operation": "mutation",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "removeFromCart",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "ID",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 88,
                        "start": 0,
                      },
                    }
                  }
                  optimisticResponse={
                    Object {
                      "__typename": "Mutation",
                      "removeFromCart": Object {
                        "__typename": "CartItem",
                        "id": "123",
                      },
                    }
                  }
                  update={[Function]}
                  variables={
                    Object {
                      "id": "123",
                    }
                  }
                >
                  <RemoveButton
                    disabled={false}
                    onClick={[Function]}
                    title="Remove Item"
                  >
                    <StyledComponent
                      disabled={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "RemoveButton-fpmibo-0",
                            "isStatic": true,
                            "lastClassName": "c5",
                            "rules": Array [
                              "font-size:3rem;background:none;outline:none;border:none;margin-right:1rem;transition:0.3s;&:hover{color:red;cursor:pointer;}",
                            ],
                          },
                          "displayName": "RemoveButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "RemoveButton-fpmibo-0",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      title="Remove Item"
                    >
                      <button
                        className="c5"
                        disabled={false}
                        onClick={[Function]}
                        title="Remove Item"
                      >
                        <Close
                          size={25}
                        >
                          <StyledIconBase
                            iconAttrs={
                              Object {
                                "fill": "currentColor",
                              }
                            }
                            iconVerticalAlign="middle"
                            iconViewBox="0 0 24 24"
                            size={25}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "StyledIconBase-sc-bdy9j4",
                                    "isStatic": false,
                                    "lastClassName": "c3",
                                    "rules": Array [
                                      "
  display: inline-block;
  vertical-align: ",
                                      [Function],
                                      ";
  overflow: hidden;
",
                                    ],
                                  },
                                  "displayName": "StyledIconBase",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "StyledIconBase-sc-bdy9j4",
                                  "target": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                }
                              }
                              iconVerticalAlign="middle"
                              iconViewBox="0 0 24 24"
                              size={25}
                            >
                              <ForwardRef
                                className="c3"
                                iconAttrs={
                                  Object {
                                    "fill": "currentColor",
                                  }
                                }
                                iconVerticalAlign="middle"
                                iconViewBox="0 0 24 24"
                                size={25}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="c3"
                                  fill="currentColor"
                                  focusable="false"
                                  height={25}
                                  viewBox="0 0 24 24"
                                  width={25}
                                >
                                  <path
                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                    key="k0"
                                  />
                                </svg>
                              </ForwardRef>
                            </StyledComponent>
                          </StyledIconBase>
                        </Close>
                      </button>
                    </StyledComponent>
                  </RemoveButton>
                </Mutation>
              </RemoveFromCart>
            </li>
          </StyledComponent>
        </CartItem__CartItemStyles>
      </CartItem>
    </ul>
    <CartFooter
      cart={
        Array [
          Object {
            "__typename": "CartItem",
            "id": "123",
            "product": Object {
              "__typename": "Product",
              "bead": "RED_JASPER",
              "description": "This is not really real.",
              "id": "123",
              "images": Array [
                "image1.png",
                "image2.png",
              ],
              "price": 1000,
              "title": "A Fake Product",
              "variant": "NECKLACE",
            },
            "user": Object {
              "__typename": "User",
              "cart": Array [],
              "email": "Murphy_Abshire@Bruen.biz",
              "id": "123",
              "image": "image.png",
              "name": "Ms. Emile Greenfelder",
              "orders": Array [],
              "role": "ADMIN",
            },
          },
        ]
      }
      email="Darrell_Dooley@Rogahn.biz"
      subTotal="$10"
      tax="$0.80"
      total="$10.80"
    >
      <CartFooter__CartFooterStyles
        cart={true}
      >
        <StyledComponent
          cart={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                "isStatic": false,
                "lastClassName": "c6",
                "rules": Array [
                  "display:grid;grid-template-columns:1fr 1fr;justify-items:center;align-items:center;border-top:10px double ",
                  [Function],
                  ";background:white;padding:1rem;.totals{opacity:",
                  [Function],
                  ";& >:last-child{font-size:3rem;}}",
                ],
              },
              "displayName": "CartFooter__CartFooterStyles",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
              "target": "footer",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <footer
            className="c6"
          >
            <div
              className="totals"
            >
              <div>
                Subtotal: 
                $10
              </div>
              <div>
                Tax: 
                $0.80
              </div>
              <div>
                $10.80
              </div>
            </div>
            <Checkout
              cart={
                Array [
                  Object {
                    "__typename": "CartItem",
                    "id": "123",
                    "product": Object {
                      "__typename": "Product",
                      "bead": "RED_JASPER",
                      "description": "This is not really real.",
                      "id": "123",
                      "images": Array [
                        "image1.png",
                        "image2.png",
                      ],
                      "price": 1000,
                      "title": "A Fake Product",
                      "variant": "NECKLACE",
                    },
                    "user": Object {
                      "__typename": "User",
                      "cart": Array [],
                      "email": "Murphy_Abshire@Bruen.biz",
                      "id": "123",
                      "image": "image.png",
                      "name": "Ms. Emile Greenfelder",
                      "orders": Array [],
                      "role": "ADMIN",
                    },
                  },
                ]
              }
              email="Darrell_Dooley@Rogahn.biz"
            >
              <Adopt(createOrder)(toggleCart)>
                <Adopt(createOrder)>
                  <Adopt>
                    <createOrder
                      render={[Function]}
                    >
                      <Mutation
                        mutation={
                          Object {
                            "definitions": Array [
                              Object {
                                "directives": Array [],
                                "kind": "OperationDefinition",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "createOrder",
                                },
                                "operation": "mutation",
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [
                                        Object {
                                          "kind": "Argument",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "token",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "token",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "Argument",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "data",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "data",
                                            },
                                          },
                                        },
                                      ],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "createOrder",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "charge",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "total",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "items",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "title",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "variableDefinitions": Array [
                                  Object {
                                    "defaultValue": undefined,
                                    "kind": "VariableDefinition",
                                    "type": Object {
                                      "kind": "NonNullType",
                                      "type": Object {
                                        "kind": "NamedType",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "String",
                                        },
                                      },
                                    },
                                    "variable": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "token",
                                      },
                                    },
                                  },
                                  Object {
                                    "defaultValue": undefined,
                                    "kind": "VariableDefinition",
                                    "type": Object {
                                      "kind": "NonNullType",
                                      "type": Object {
                                        "kind": "NamedType",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "AddressCreateInput",
                                        },
                                      },
                                    },
                                    "variable": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "data",
                                      },
                                    },
                                  },
                                ],
                              },
                            ],
                            "kind": "Document",
                            "loc": Object {
                              "end": 208,
                              "start": 0,
                            },
                          }
                        }
                        refetchQueries={
                          Array [
                            Object {
                              "query": Object {
                                "definitions": Array [
                                  Object {
                                    "directives": Array [],
                                    "kind": "OperationDefinition",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "CURRENT_USER_QUERY",
                                    },
                                    "operation": "query",
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "me",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "email",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "image",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "role",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "cart",
                                                },
                                                "selectionSet": Object {
                                                  "kind": "SelectionSet",
                                                  "selections": Array [
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "id",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "product",
                                                      },
                                                      "selectionSet": Object {
                                                        "kind": "SelectionSet",
                                                        "selections": Array [
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "id",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "title",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "images",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "price",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "variant",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "bead",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "orders",
                                                },
                                                "selectionSet": Object {
                                                  "kind": "SelectionSet",
                                                  "selections": Array [
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "id",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "charge",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "total",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "shipped",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "createdAt",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "items",
                                                      },
                                                      "selectionSet": Object {
                                                        "kind": "SelectionSet",
                                                        "selections": Array [
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "id",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                          Object {
                                                            "alias": undefined,
                                                            "arguments": Array [],
                                                            "directives": Array [],
                                                            "kind": "Field",
                                                            "name": Object {
                                                              "kind": "Name",
                                                              "value": "images",
                                                            },
                                                            "selectionSet": undefined,
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "variableDefinitions": Array [],
                                  },
                                ],
                                "kind": "Document",
                                "loc": Object {
                                  "end": 412,
                                  "start": 0,
                                },
                              },
                            },
                            Object {
                              "query": Object {
                                "definitions": Array [
                                  Object {
                                    "directives": Array [],
                                    "kind": "OperationDefinition",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "ALL_PRODUCTS_QUERY",
                                    },
                                    "operation": "query",
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [
                                            Object {
                                              "kind": "Argument",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "skip",
                                              },
                                              "value": Object {
                                                "kind": "Variable",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "skip",
                                                },
                                              },
                                            },
                                            Object {
                                              "kind": "Argument",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "first",
                                              },
                                              "value": Object {
                                                "kind": "Variable",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "first",
                                                },
                                              },
                                            },
                                            Object {
                                              "kind": "Argument",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "where",
                                              },
                                              "value": Object {
                                                "kind": "Variable",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "where",
                                                },
                                              },
                                            },
                                            Object {
                                              "kind": "Argument",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "orderBy",
                                              },
                                              "value": Object {
                                                "kind": "Variable",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "orderBy",
                                                },
                                              },
                                            },
                                          ],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "products",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "title",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "description",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "images",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "price",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "variant",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "bead",
                                                },
                                                "selectionSet": undefined,
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "variableDefinitions": Array [
                                      Object {
                                        "defaultValue": Object {
                                          "kind": "IntValue",
                                          "value": "0",
                                        },
                                        "kind": "VariableDefinition",
                                        "type": Object {
                                          "kind": "NamedType",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "Int",
                                          },
                                        },
                                        "variable": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "skip",
                                          },
                                        },
                                      },
                                      Object {
                                        "defaultValue": Object {
                                          "kind": "IntValue",
                                          "value": "8",
                                        },
                                        "kind": "VariableDefinition",
                                        "type": Object {
                                          "kind": "NamedType",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "Int",
                                          },
                                        },
                                        "variable": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "first",
                                          },
                                        },
                                      },
                                      Object {
                                        "defaultValue": undefined,
                                        "kind": "VariableDefinition",
                                        "type": Object {
                                          "kind": "NamedType",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "ProductWhereInput",
                                          },
                                        },
                                        "variable": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "where",
                                          },
                                        },
                                      },
                                      Object {
                                        "defaultValue": Object {
                                          "kind": "EnumValue",
                                          "value": "title_ASC",
                                        },
                                        "kind": "VariableDefinition",
                                        "type": Object {
                                          "kind": "NamedType",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "ProductOrderByInput",
                                          },
                                        },
                                        "variable": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "orderBy",
                                          },
                                        },
                                      },
                                    ],
                                  },
                                ],
                                "kind": "Document",
                                "loc": Object {
                                  "end": 309,
                                  "start": 0,
                                },
                              },
                              "variables": Object {
                                "skip": 0,
                                "where": Object {
                                  "sold": false,
                                },
                              },
                            },
                          ]
                        }
                      >
                        <toggleCart
                          createOrder={[Function]}
                          render={[Function]}
                        >
                          <Mutation
                            mutation={
                              Object {
                                "definitions": Array [
                                  Object {
                                    "directives": Array [],
                                    "kind": "OperationDefinition",
                                    "name": undefined,
                                    "operation": "mutation",
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [
                                            Object {
                                              "arguments": Array [],
                                              "kind": "Directive",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "client",
                                              },
                                            },
                                          ],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "toggleCart",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                    "variableDefinitions": Array [],
                                  },
                                ],
                                "kind": "Document",
                                "loc": Object {
                                  "end": 41,
                                  "start": 0,
                                },
                              }
                            }
                          >
                            <ReactStripeCheckout
                              ComponentClass="span"
                              amount={1080}
                              billingAddress={true}
                              className="StripeCheckout"
                              currency="USD"
                              description="Order of 1 item!"
                              email="Darrell_Dooley@Rogahn.biz"
                              image="https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png"
                              label="Pay With Card"
                              locale="auto"
                              name="Anne's Handmade"
                              panelLabel="Buy Stuff 🤑"
                              reconfigureOnUpdate={false}
                              shippingAddress={true}
                              stripeKey="pk_test_htV5BwONms8PGEJ4RVZgsOgU"
                              token={[Function]}
                              triggerEvent="onClick"
                            >
                              <span
                                onClick={[Function]}
                              >
                                <CheckoutButton>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "CheckoutButton-sc-7jm8jz-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "font-family:'Raleway';font-size:2.5rem;padding:0.5rem;border:none;outline:none;cursor:pointer;background:",
                                            [Function],
                                            ";color:",
                                            [Function],
                                            ";transition:all 0.5s ease-in-out;&:hover{box-shadow:",
                                            [Function],
                                            ";}",
                                            "@media (max-width:",
                                            "36",
                                            "em){",
                                            "
    font-size: 2rem;
  ",
                                            "}",
                                            "padding:2rem 4rem;",
                                          ],
                                        },
                                        "displayName": "CheckoutButton",
                                        "foldedComponentIds": Array [
                                          "GreenButton-sc-1bjesnv-0",
                                        ],
                                        "render": [Function],
                                        "styledComponentId": "CheckoutButton-sc-7jm8jz-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <button
                                      className="c7"
                                    >
                                      Checkout
                                    </button>
                                  </StyledComponent>
                                </CheckoutButton>
                              </span>
                            </ReactStripeCheckout>
                          </Mutation>
                        </toggleCart>
                      </Mutation>
                    </createOrder>
                  </Adopt>
                </Adopt(createOrder)>
              </Adopt(createOrder)(toggleCart)>
            </Checkout>
          </footer>
        </StyledComponent>
      </CartFooter__CartFooterStyles>
    </CartFooter>
  </div>,
]
`;

exports[`<Cart /> displays a message if user has no cart items 1`] = `
Array [
  .c0 {
  position: fixed;
  min-width: 500px;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  display: grid;
  grid-template-rows: auto 1fr auto;
  background: #FAFAFA;
  box-shadow: 0 0 10px 3px rgba(0,0,0,0.2);
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}

.c0 ul {
  background: #F0F0F0;
  margin: 0;
  padding: 0 2rem;
  list-style: none;
  overflow: auto;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c2 {
  position: absolute;
  z-index: 2;
  top: 3rem;
  right: 0rem;
  background: #333333;
  color: #FF80B5;
  border: 0;
  outline: 0;
  cursor: pointer;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c2:hover {
  color: #ff1a7a;
}

.c1 {
  background: #333333;
  border-left: 10px solid #FF80B5;
  padding: 1rem;
}

.c1 .title {
  font-size: 3.5rem;
  color: white;
  text-align: center;
}

.c5 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 10px double #333333;
  background: white;
  padding: 1rem;
}

.c5 .totals {
  opacity: 0;
}

.c5 .totals >:last-child {
  font-size: 3rem;
}

.c4 {
  height: 100%;
  display: grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  justify-items: center;
}

.c4 .content {
  height: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #29FFA6;
  padding: 2rem;
}

.c4 .content .message {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  font-size: 4rem;
}

.c4 .content .logo {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  width: 10rem;
  height: 10rem;
  background-image: url(https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png);
  background-repeat: no-repeat;
  background-size: cover;
}

.c4 .content .logo:hover {
  background-image: url(https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo-eyes.png);
}

@media (max-width:36em) {
  .c0 {
    min-width: 350px;
  }
}

<Cart__CartStyles
    data-test="cart"
  >
    <StyledComponent
      data-test="cart"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Cart__CartStyles-sc-16y1lxx-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "position:fixed;min-width:500px;height:100%;top:0;right:0;bottom:0;z-index:5;display:grid;grid-template-rows:auto 1fr auto;background:",
              [Function],
              ";box-shadow:0 0 10px 3px rgba(0,0,0,0.2);transform:",
              [Function],
              ";transition:all 0.5s ease-out;",
              "@media (max-width:",
              "36",
              "em){",
              "
    min-width: 350px;
  ",
              "}",
              " ul{background:",
              [Function],
              ";margin:0;padding:0 2rem;list-style:none;overflow:auto;}",
            ],
          },
          "displayName": "Cart__CartStyles",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Cart__CartStyles-sc-16y1lxx-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-test="cart"
      >
        <CartHeader
          title="Miss Veda Bailey's Cart"
          toggleCart={[Function]}
        >
          <CartHeader__CartHeaderStyles>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "background:",
                      [Function],
                      ";border-left:10px solid ",
                      [Function],
                      ";padding:1rem;.title{font-size:3.5rem;color:white;text-align:center;}",
                    ],
                  },
                  "displayName": "CartHeader__CartHeaderStyles",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                  "target": "header",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <header
                className="c1"
              >
                <CloseButton
                  onClick={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "CloseButton-sc-1atzcdg-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "position:absolute;z-index:2;top:3rem;right:0rem;background:",
                            [Function],
                            ";color:",
                            [Function],
                            ";border:0;outline:0;cursor:pointer;transition:0.3s;&:hover{color:",
                            [Function],
                            ";}",
                          ],
                        },
                        "displayName": "CloseButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "CloseButton-sc-1atzcdg-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <button
                      className="c2"
                      onClick={[Function]}
                    >
                      <ArrowForward
                        size={25}
                      >
                        <StyledIconBase
                          iconAttrs={
                            Object {
                              "fill": "currentColor",
                            }
                          }
                          iconVerticalAlign="middle"
                          iconViewBox="0 0 24 24"
                          size={25}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "StyledIconBase-sc-bdy9j4",
                                  "isStatic": false,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  display: inline-block;
  vertical-align: ",
                                    [Function],
                                    ";
  overflow: hidden;
",
                                  ],
                                },
                                "displayName": "StyledIconBase",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "StyledIconBase-sc-bdy9j4",
                                "target": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            iconAttrs={
                              Object {
                                "fill": "currentColor",
                              }
                            }
                            iconVerticalAlign="middle"
                            iconViewBox="0 0 24 24"
                            size={25}
                          >
                            <ForwardRef
                              className="c3"
                              iconAttrs={
                                Object {
                                  "fill": "currentColor",
                                }
                              }
                              iconVerticalAlign="middle"
                              iconViewBox="0 0 24 24"
                              size={25}
                            >
                              <svg
                                aria-hidden="true"
                                className="c3"
                                fill="currentColor"
                                focusable="false"
                                height={25}
                                viewBox="0 0 24 24"
                                width={25}
                              >
                                <path
                                  d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                                  key="k0"
                                />
                              </svg>
                            </ForwardRef>
                          </StyledComponent>
                        </StyledIconBase>
                      </ArrowForward>
                    </button>
                  </StyledComponent>
                </CloseButton>
                <div
                  className="title"
                >
                  Miss Veda Bailey's Cart
                </div>
              </header>
            </StyledComponent>
          </CartHeader__CartHeaderStyles>
        </CartHeader>
        <ul>
          <NoItems>
            <NoItems__NoItemsStyles>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "NoItems__NoItemsStyles-sc-18i7exb-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        "height:100%;display:grid;align-items:center;justify-items:center;.content{height:50%;display:flex;flex-direction:column;align-items:center;background:",
                        [Function],
                        ";padding:2rem;.message{align-self:flex-start;font-size:4rem;}.logo{align-self:center;width:10rem;height:10rem;background-image:url(",
                        "https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png",
                        ");background-repeat:no-repeat;background-size:cover;&:hover{background-image:url(",
                        "https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo-eyes.png",
                        ");}}}",
                      ],
                    },
                    "displayName": "NoItems__NoItemsStyles",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "NoItems__NoItemsStyles-sc-18i7exb-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c4"
                >
                  <div
                    className="content"
                  >
                    <div
                      className="logo"
                    />
                    <div
                      className="message"
                    >
                      Empty Cart
                    </div>
                  </div>
                </div>
              </StyledComponent>
            </NoItems__NoItemsStyles>
          </NoItems>
        </ul>
        <CartFooter
          cart={Array []}
          email="Rosemary_Harvey@Clint.tv"
          subTotal="$0"
          tax="$0"
          total="$0"
        >
          <CartFooter__CartFooterStyles
            cart={false}
          >
            <StyledComponent
              cart={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                    "isStatic": false,
                    "lastClassName": "c5",
                    "rules": Array [
                      "display:grid;grid-template-columns:1fr 1fr;justify-items:center;align-items:center;border-top:10px double ",
                      [Function],
                      ";background:white;padding:1rem;.totals{opacity:",
                      [Function],
                      ";& >:last-child{font-size:3rem;}}",
                    ],
                  },
                  "displayName": "CartFooter__CartFooterStyles",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                  "target": "footer",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <footer
                className="c5"
              >
                <div
                  className="totals"
                >
                  <div>
                    Subtotal: 
                    $0
                  </div>
                  <div>
                    Tax: 
                    $0
                  </div>
                  <div>
                    $0
                  </div>
                </div>
              </footer>
            </StyledComponent>
          </CartFooter__CartFooterStyles>
        </CartFooter>
      </div>
    </StyledComponent>
  </Cart__CartStyles>,
  .c0 {
  position: fixed;
  min-width: 500px;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  display: grid;
  grid-template-rows: auto 1fr auto;
  background: #FAFAFA;
  box-shadow: 0 0 10px 3px rgba(0,0,0,0.2);
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}

.c0 ul {
  background: #F0F0F0;
  margin: 0;
  padding: 0 2rem;
  list-style: none;
  overflow: auto;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c2 {
  position: absolute;
  z-index: 2;
  top: 3rem;
  right: 0rem;
  background: #333333;
  color: #FF80B5;
  border: 0;
  outline: 0;
  cursor: pointer;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c2:hover {
  color: #ff1a7a;
}

.c1 {
  background: #333333;
  border-left: 10px solid #FF80B5;
  padding: 1rem;
}

.c1 .title {
  font-size: 3.5rem;
  color: white;
  text-align: center;
}

.c5 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 10px double #333333;
  background: white;
  padding: 1rem;
}

.c5 .totals {
  opacity: 0;
}

.c5 .totals >:last-child {
  font-size: 3rem;
}

.c4 {
  height: 100%;
  display: grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  justify-items: center;
}

.c4 .content {
  height: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #29FFA6;
  padding: 2rem;
}

.c4 .content .message {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  font-size: 4rem;
}

.c4 .content .logo {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  width: 10rem;
  height: 10rem;
  background-image: url(https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png);
  background-repeat: no-repeat;
  background-size: cover;
}

.c4 .content .logo:hover {
  background-image: url(https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo-eyes.png);
}

@media (max-width:36em) {
  .c0 {
    min-width: 350px;
  }
}

<StyledComponent
    data-test="cart"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Cart__CartStyles-sc-16y1lxx-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "position:fixed;min-width:500px;height:100%;top:0;right:0;bottom:0;z-index:5;display:grid;grid-template-rows:auto 1fr auto;background:",
            [Function],
            ";box-shadow:0 0 10px 3px rgba(0,0,0,0.2);transform:",
            [Function],
            ";transition:all 0.5s ease-out;",
            "@media (max-width:",
            "36",
            "em){",
            "
    min-width: 350px;
  ",
            "}",
            " ul{background:",
            [Function],
            ";margin:0;padding:0 2rem;list-style:none;overflow:auto;}",
          ],
        },
        "displayName": "Cart__CartStyles",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Cart__CartStyles-sc-16y1lxx-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0"
      data-test="cart"
    >
      <CartHeader
        title="Miss Veda Bailey's Cart"
        toggleCart={[Function]}
      >
        <CartHeader__CartHeaderStyles>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "background:",
                    [Function],
                    ";border-left:10px solid ",
                    [Function],
                    ";padding:1rem;.title{font-size:3.5rem;color:white;text-align:center;}",
                  ],
                },
                "displayName": "CartHeader__CartHeaderStyles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                "target": "header",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <header
              className="c1"
            >
              <CloseButton
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "CloseButton-sc-1atzcdg-0",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "position:absolute;z-index:2;top:3rem;right:0rem;background:",
                          [Function],
                          ";color:",
                          [Function],
                          ";border:0;outline:0;cursor:pointer;transition:0.3s;&:hover{color:",
                          [Function],
                          ";}",
                        ],
                      },
                      "displayName": "CloseButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "CloseButton-sc-1atzcdg-0",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <button
                    className="c2"
                    onClick={[Function]}
                  >
                    <ArrowForward
                      size={25}
                    >
                      <StyledIconBase
                        iconAttrs={
                          Object {
                            "fill": "currentColor",
                          }
                        }
                        iconVerticalAlign="middle"
                        iconViewBox="0 0 24 24"
                        size={25}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "StyledIconBase-sc-bdy9j4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  display: inline-block;
  vertical-align: ",
                                  [Function],
                                  ";
  overflow: hidden;
",
                                ],
                              },
                              "displayName": "StyledIconBase",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "StyledIconBase-sc-bdy9j4",
                              "target": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          iconAttrs={
                            Object {
                              "fill": "currentColor",
                            }
                          }
                          iconVerticalAlign="middle"
                          iconViewBox="0 0 24 24"
                          size={25}
                        >
                          <ForwardRef
                            className="c3"
                            iconAttrs={
                              Object {
                                "fill": "currentColor",
                              }
                            }
                            iconVerticalAlign="middle"
                            iconViewBox="0 0 24 24"
                            size={25}
                          >
                            <svg
                              aria-hidden="true"
                              className="c3"
                              fill="currentColor"
                              focusable="false"
                              height={25}
                              viewBox="0 0 24 24"
                              width={25}
                            >
                              <path
                                d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                                key="k0"
                              />
                            </svg>
                          </ForwardRef>
                        </StyledComponent>
                      </StyledIconBase>
                    </ArrowForward>
                  </button>
                </StyledComponent>
              </CloseButton>
              <div
                className="title"
              >
                Miss Veda Bailey's Cart
              </div>
            </header>
          </StyledComponent>
        </CartHeader__CartHeaderStyles>
      </CartHeader>
      <ul>
        <NoItems>
          <NoItems__NoItemsStyles>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "NoItems__NoItemsStyles-sc-18i7exb-0",
                    "isStatic": false,
                    "lastClassName": "c4",
                    "rules": Array [
                      "height:100%;display:grid;align-items:center;justify-items:center;.content{height:50%;display:flex;flex-direction:column;align-items:center;background:",
                      [Function],
                      ";padding:2rem;.message{align-self:flex-start;font-size:4rem;}.logo{align-self:center;width:10rem;height:10rem;background-image:url(",
                      "https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png",
                      ");background-repeat:no-repeat;background-size:cover;&:hover{background-image:url(",
                      "https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo-eyes.png",
                      ");}}}",
                    ],
                  },
                  "displayName": "NoItems__NoItemsStyles",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "NoItems__NoItemsStyles-sc-18i7exb-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c4"
              >
                <div
                  className="content"
                >
                  <div
                    className="logo"
                  />
                  <div
                    className="message"
                  >
                    Empty Cart
                  </div>
                </div>
              </div>
            </StyledComponent>
          </NoItems__NoItemsStyles>
        </NoItems>
      </ul>
      <CartFooter
        cart={Array []}
        email="Rosemary_Harvey@Clint.tv"
        subTotal="$0"
        tax="$0"
        total="$0"
      >
        <CartFooter__CartFooterStyles
          cart={false}
        >
          <StyledComponent
            cart={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "display:grid;grid-template-columns:1fr 1fr;justify-items:center;align-items:center;border-top:10px double ",
                    [Function],
                    ";background:white;padding:1rem;.totals{opacity:",
                    [Function],
                    ";& >:last-child{font-size:3rem;}}",
                  ],
                },
                "displayName": "CartFooter__CartFooterStyles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                "target": "footer",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <footer
              className="c5"
            >
              <div
                className="totals"
              >
                <div>
                  Subtotal: 
                  $0
                </div>
                <div>
                  Tax: 
                  $0
                </div>
                <div>
                  $0
                </div>
              </div>
            </footer>
          </StyledComponent>
        </CartFooter__CartFooterStyles>
      </CartFooter>
    </div>
  </StyledComponent>,
  .c0 {
  position: fixed;
  min-width: 500px;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  display: grid;
  grid-template-rows: auto 1fr auto;
  background: #FAFAFA;
  box-shadow: 0 0 10px 3px rgba(0,0,0,0.2);
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}

.c0 ul {
  background: #F0F0F0;
  margin: 0;
  padding: 0 2rem;
  list-style: none;
  overflow: auto;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c2 {
  position: absolute;
  z-index: 2;
  top: 3rem;
  right: 0rem;
  background: #333333;
  color: #FF80B5;
  border: 0;
  outline: 0;
  cursor: pointer;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.c2:hover {
  color: #ff1a7a;
}

.c1 {
  background: #333333;
  border-left: 10px solid #FF80B5;
  padding: 1rem;
}

.c1 .title {
  font-size: 3.5rem;
  color: white;
  text-align: center;
}

.c5 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 10px double #333333;
  background: white;
  padding: 1rem;
}

.c5 .totals {
  opacity: 0;
}

.c5 .totals >:last-child {
  font-size: 3rem;
}

.c4 {
  height: 100%;
  display: grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  justify-items: center;
}

.c4 .content {
  height: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #29FFA6;
  padding: 2rem;
}

.c4 .content .message {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  font-size: 4rem;
}

.c4 .content .logo {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  width: 10rem;
  height: 10rem;
  background-image: url(https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png);
  background-repeat: no-repeat;
  background-size: cover;
}

.c4 .content .logo:hover {
  background-image: url(https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo-eyes.png);
}

@media (max-width:36em) {
  .c0 {
    min-width: 350px;
  }
}

<div
    className="c0"
    data-test="cart"
  >
    <CartHeader
      title="Miss Veda Bailey's Cart"
      toggleCart={[Function]}
    >
      <CartHeader__CartHeaderStyles>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  "background:",
                  [Function],
                  ";border-left:10px solid ",
                  [Function],
                  ";padding:1rem;.title{font-size:3.5rem;color:white;text-align:center;}",
                ],
              },
              "displayName": "CartHeader__CartHeaderStyles",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "CartHeader__CartHeaderStyles-sc-1wczucq-0",
              "target": "header",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <header
            className="c1"
          >
            <CloseButton
              onClick={[Function]}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "CloseButton-sc-1atzcdg-0",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "position:absolute;z-index:2;top:3rem;right:0rem;background:",
                        [Function],
                        ";color:",
                        [Function],
                        ";border:0;outline:0;cursor:pointer;transition:0.3s;&:hover{color:",
                        [Function],
                        ";}",
                      ],
                    },
                    "displayName": "CloseButton",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "CloseButton-sc-1atzcdg-0",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
              >
                <button
                  className="c2"
                  onClick={[Function]}
                >
                  <ArrowForward
                    size={25}
                  >
                    <StyledIconBase
                      iconAttrs={
                        Object {
                          "fill": "currentColor",
                        }
                      }
                      iconVerticalAlign="middle"
                      iconViewBox="0 0 24 24"
                      size={25}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "StyledIconBase-sc-bdy9j4",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  display: inline-block;
  vertical-align: ",
                                [Function],
                                ";
  overflow: hidden;
",
                              ],
                            },
                            "displayName": "StyledIconBase",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "StyledIconBase-sc-bdy9j4",
                            "target": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        iconAttrs={
                          Object {
                            "fill": "currentColor",
                          }
                        }
                        iconVerticalAlign="middle"
                        iconViewBox="0 0 24 24"
                        size={25}
                      >
                        <ForwardRef
                          className="c3"
                          iconAttrs={
                            Object {
                              "fill": "currentColor",
                            }
                          }
                          iconVerticalAlign="middle"
                          iconViewBox="0 0 24 24"
                          size={25}
                        >
                          <svg
                            aria-hidden="true"
                            className="c3"
                            fill="currentColor"
                            focusable="false"
                            height={25}
                            viewBox="0 0 24 24"
                            width={25}
                          >
                            <path
                              d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                              key="k0"
                            />
                          </svg>
                        </ForwardRef>
                      </StyledComponent>
                    </StyledIconBase>
                  </ArrowForward>
                </button>
              </StyledComponent>
            </CloseButton>
            <div
              className="title"
            >
              Miss Veda Bailey's Cart
            </div>
          </header>
        </StyledComponent>
      </CartHeader__CartHeaderStyles>
    </CartHeader>
    <ul>
      <NoItems>
        <NoItems__NoItemsStyles>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "NoItems__NoItemsStyles-sc-18i7exb-0",
                  "isStatic": false,
                  "lastClassName": "c4",
                  "rules": Array [
                    "height:100%;display:grid;align-items:center;justify-items:center;.content{height:50%;display:flex;flex-direction:column;align-items:center;background:",
                    [Function],
                    ";padding:2rem;.message{align-self:flex-start;font-size:4rem;}.logo{align-self:center;width:10rem;height:10rem;background-image:url(",
                    "https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo.png",
                    ");background-repeat:no-repeat;background-size:cover;&:hover{background-image:url(",
                    "https://s3-us-west-1.amazonaws.com/shopping-site/assets/buddha-logo-eyes.png",
                    ");}}}",
                  ],
                },
                "displayName": "NoItems__NoItemsStyles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "NoItems__NoItemsStyles-sc-18i7exb-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
            >
              <div
                className="content"
              >
                <div
                  className="logo"
                />
                <div
                  className="message"
                >
                  Empty Cart
                </div>
              </div>
            </div>
          </StyledComponent>
        </NoItems__NoItemsStyles>
      </NoItems>
    </ul>
    <CartFooter
      cart={Array []}
      email="Rosemary_Harvey@Clint.tv"
      subTotal="$0"
      tax="$0"
      total="$0"
    >
      <CartFooter__CartFooterStyles
        cart={false}
      >
        <StyledComponent
          cart={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
                "isStatic": false,
                "lastClassName": "c5",
                "rules": Array [
                  "display:grid;grid-template-columns:1fr 1fr;justify-items:center;align-items:center;border-top:10px double ",
                  [Function],
                  ";background:white;padding:1rem;.totals{opacity:",
                  [Function],
                  ";& >:last-child{font-size:3rem;}}",
                ],
              },
              "displayName": "CartFooter__CartFooterStyles",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "CartFooter__CartFooterStyles-sc-10i9ibd-0",
              "target": "footer",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <footer
            className="c5"
          >
            <div
              className="totals"
            >
              <div>
                Subtotal: 
                $0
              </div>
              <div>
                Tax: 
                $0
              </div>
              <div>
                $0
              </div>
            </div>
          </footer>
        </StyledComponent>
      </CartFooter__CartFooterStyles>
    </CartFooter>
  </div>,
]
`;
